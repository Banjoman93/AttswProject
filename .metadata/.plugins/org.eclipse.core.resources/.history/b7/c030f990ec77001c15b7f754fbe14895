package com.example.tddfirst;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;

@SpringBootTest
class TddfirstApplicationTestsDoctor {
    @Autowired
    private DoctorRepository repository;

    @BeforeEach																		//annotazione che dice al framework spring di eseguire ogni volta che deve eseguire un test di unità "prima di eseguire questo test esegui contentload"
    void contextLoads() {
        repository.deleteAll();
    }

    @Test
    public void DoctorInsert() {
        repository.save(new Doctor("Gaia", "Pittella"));
        assertEquals("Gaia", repository.findBySurName("Pittella").firstName);
    }

    @Test
    public void DoctorModify() {
        repository.save(new Doctor("Gaia", "Pittella"));
        Doctor doctor = repository.findBySurName("Pittella");
        doctor.setFirstName("Ugo");
        repository.save(doctor);
        doctor = repository.findBySurName("Pittella");
        assertEquals(doctor.getFirstName(), "Ugo");
    }

    @Test
    public void DoctorDelete() {
        repository.save(new Doctor("Gaia", "Pittella"));
        Doctor doctor = repository.findBySurName("Pittella");
        repository.delete(doctor);
        assertNull(repository.findBySurName("Pittella"));							//il test sarà corretto solo se passerà l'assertNull (non ci dovrà essere nessun dottore all'interno del repository con il cognome richiesto)
    }

}
